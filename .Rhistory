install.packages("tidyverse")
install.packages("stringr")
help(group_by)
library(tidyverse)
help(group_by)
# help(group_by)
view(data1)
view(data1)
install.packages("tidyverse")
library(tidyverse)
# Step 1
data1 = read.csv("essentia.data.csv")
install.packages("tidyverse")
# Step 1
data1 = read.csv("essentia.data.csv")
setwd("~/GitHub/lab-5-summarizing-and-graphing-data-in-r-Camilo-GC-Q")
# Step 1
data1 = read.csv("essentia.data.csv")
# Step 1
data1 = read.csv("essentia.data.csv")
# Step 1
data1 = read.csv("essentia.data")
# Step 1
data1 = read.csv("data/essentia.data")
# Step 1
data1 = read.csv("data/essentia.data.csv")
# help(group_by)
view(data1)
view(grouped.data)
grouped.data = group_by(data, "overall_loudness")
# Step 1
data = read.csv("data/essentia.data.csv")
# help(group_by)
view(data)
out.of.range = function(data){
grouped.data = group_by(data, "overall_loudness")
view(grouped.data)
}
# help(group_by)
help(summarize)
out.of.range = function(data){
data |>
group_by("artist") |>
summarize(data, min(overall_loudness), max(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness))
}
data |>
group_by("artist") |>
summarize(data, min(overall_loudness), max(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness))
data |>
group_by("artist") |>
summarize(min(overall_loudness), max(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness))
data |>
group_by("Manchester Orchestra") |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness))
data |>
group_by("Manchester Orchestra") |>
summarize(data, min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness))
data |>
group_by("Manchester Orchestra") |>
summarize(group_by("Manchester Orchestra"), min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness))
data |>
group_by("Manchester Orchestra") |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness))
data |>
group_by("Manchester Orchestra") |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness))
data |>
group_by("The Front Bottoms") |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness))
help(quantile)
data |>
group_by(The Front Bottoms) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness))
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness))
data |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness))
help(mutate)
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate()
allentown = read.csv("data/essentia.data.allentown.csv")
# help(group_by)
help(quantile)
help(summarize)
help(mutate)
view(data)
out = function(allentown){
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate()
}
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate()
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate = (out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF) |>
}
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate = (out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate = (out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate = (out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
mutate = (out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate = (out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate = (out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate = (out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate = (out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate = (out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate(out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate(out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
allentown |>
group_by(artist) |>
summarize(min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max(overall_loudness)) |>
mutate(out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
allentown |>
group_by(artist) |>
summarize(min = min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max = max(overall_loudness)) |>
mutate(out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
allentown |>
group_by(artist) |>
summarize(min = min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max = max(overall_loudness)) |>
mutate(out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
data |>
group_by(artist) |>
summarize(min = min(overall_loudness), LF = median(overall_loudness) - 2*IQR(overall_loudness), UF = median(overall_loudness) + 2*IQR(overall_loudness), max = max(overall_loudness)) |>
mutate(out.of.range = allentown$overall_loudness > max | allentown$overall_loudness < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF)
out(data1, col)
for (col in colnames(data1)){
if(is.numeric(col)){
out(data1, col)
}
data |>
group_by(artist) |>
summarize(min = min(get(feature)), LF = median(get(feature)) - 2*IQR(get(feature)), UF = median(get(feature)) + 2*IQR(get(feature)), max = max(get(feature))) |>
mutate(out.of.range = allentown$get(feature) > max | allentown$get(feature) < min) |>
mutate(unusual = allentown$get(feature) < LF | allentown$get(feature) > UF) |>
mutate(description = case_when(out.of.range == True ~ "Out of Range",
unusual == True ~ "Outlying",
True ~ "Within Range"))
data |>
group_by(artist) |>
summarize(min = min(get(feature)), LF = median(get(feature)) - 2*IQR(get(feature)), UF = median(get(feature)) + 2*IQR(get(feature)), max = max(get(feature))) |>
mutate(out.of.range = allentown$get(feature) > max | allentown$get(feature) < min) |>
mutate(unusual = allentown$get(feature) < LF | allentown$get(feature) > UF) |>
mutate(description = case_when(out.of.range == True ~ "Out of Range",
unusual == True ~ "Outlying",
True ~ "Within Range"))
data |>
group_by(artist) |>
summarize(min = min(get(feature)), LF = median(get(feature)) - 2*IQR(get(feature)), UF = median(get(feature)) + 2*IQR(get(feature)), max = max(get(feature))) |>
mutate(out.of.range = allentown$get(feature) > max | allentown$get(feature) < min) |>
mutate(unusual = allentown$feature < LF | allentown$feature > UF) |>
mutate(description = case_when(out.of.range == True ~ "Out of Range",
unusual == True ~ "Outlying",
True ~ "Within Range"))
for (col in colnames(data1)){
if(is.numeric(col)){
out(data1, col)
}
}
print(out1)
for (col in colnames(data1)){
if(is.numeric(col)){
out1 = out(data1, col)
print(out1)
}
}
data |>
group_by(artist) |>
summarize(min = min(get(feature)), LF = median(get(feature)) - 2*IQR(get(feature)), UF = median(get(feature)) + 2*IQR(get(feature)), max = max(get(feature))) |>
mutate(out.of.range = allentown$get(feature) > max | allentown$get(feature) < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF) |>
mutate(description = case_when(out.of.range == True ~ "Out of Range",
unusual == True ~ "Outlying",
True ~ "Within Range"))
data |>
group_by(artist) |>
summarize(min = min(get(feature)), LF = median(get(feature)) - 2*IQR(get(feature)), UF = median(get(feature)) + 2*IQR(get(feature)), max = max(get(feature))) |>
mutate(out.of.range = allentown$get(feature) > max | allentown$get(feature) < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF) |>
mutate(description = case_when(out.of.range == True ~ "Out of Range",
unusual == True ~ "Outlying",
True ~ "Within Range"))
data |>
group_by(artist) |>
summarize(min = min(get(feature)), LF = median(get(feature)) - 2*IQR(get(feature)), UF = median(get(feature)) + 2*IQR(get(feature)), max = max(get(feature))) |>
mutate(out.of.range = allentown$get(feature) > max | allentown$get(feature) < min) |>
mutate(unusual = allentown$overall_loudness < LF | allentown$overall_loudness > UF) |>
mutate(description = case_when(out.of.range == True ~ "Out of Range",
unusual == True ~ "Outlying",
True ~ "Within Range"))
for (col in colnames(data1)){
if(is.numeric(col)){
out1 = out(data1, col)
}
}
for (col in colnames(data1)){
if(class(get(feature)) == "numeric"){
out1 = out(data1, col)
}
}
for (col in colnames(data1)){
if(class(get(col)) == "numeric"){
out1 = out(data1, col)
}
}
for (col in colnames(data1)){
if(class(col) == "numeric"){
out1 = out(data1, col)
}
}
view(data1)
for (col in colnames(data1)){
if(class(essentia.data$col) == "numeric"){
out1 = out(data1, col)
}
}
for (col in colnames(data1)){
if(class(data1$col) == "numeric"){
out1 = out(data1, col)
}
}
out1 = out(data1, col)
for (col in colnames(data1)){
if(class(data1$col) == "numeric"){
out1 = out(data1, col)
}
}
data |>
group_by(artist) |>
summarize(min = min(get(feature)), LF = median(feature) - 2*IQR(feature), UF = median(feature) + 2*IQR(feature), max = max(feature)) |>
mutate(out.of.range = allentown$feature > max | allentown$feature < min) |>
mutate(unusual = allentown$feature < LF | allentown$feature > UF) |>
mutate(description = case_when(out.of.range == True ~ "Out of Range",
unusual == True ~ "Outlying",
True ~ "Within Range"))
out1 = out(data1, col)
out1 = out(data1, col)
install.packages("tidyverse")
library(tidyverse)
# Step 1
data1 = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
# help(group_by)
help(quantile)
help(summarize)
help(mutate)
view(data)
out = function(data, feature){
data |>
group_by(artist) |>
summarize(min = min(feature), LF = median(feature) - 2*IQR(feature), UF = median(feature) + 2*IQR(feature), max = max(feature)) |>
mutate(out.of.range = allentown$feature > max | allentown$feature < min) |>
mutate(unusual = allentown$feature < LF | allentown$feature > UF) |>
mutate(description = case_when(out.of.range == True ~ "Out of Range",
unusual == True ~ "Outlying",
True ~ "Within Range"))
}
for (col in colnames(data1)){
if(class(data1$col) == "numeric"){
out1 = out(data1, col)
}
}
view(data1)
for (col in colnames(data1)){
if(class(data1$col) == "numeric"){
out1 = out(data1, col)
}
}
out1 = out(data1, col)
out1 = out(data1, col)
for (col in colnames(data1)){
if(class(data1$col) == "numeric"){
out1 = out(data1, col)
}
}
out1 = out(data1, col)
out1 = out(data1, col)
for (col in colnames(data1)){
if(class(data1$col) == "numeric"){
out1 = out(data1, col)
}
}
out1 = out(data1, col)
library(tidyverse)
out1 = out(data1, col)
out1 = out(data1, col)
out1 = out(data1, col)
out1 = out(data1, col)
out1 = out(data1, col)
out1 = out(data1, col)
install.packages("tidyverse")
library(tidyverse)
# Step 1
data1 = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
# help(group_by)
help(quantile)
help(summarize)
help(mutate)
view(data)
out = function(data, feature){
data |>
group_by(artist) |>
summarize(min = min(feature, na.rm = True), LF = median(feature, na.rm = True) - 2*IQR(feature, na.rm = True), UF = median(feature, na.rm = True) + 2*IQR(feature, na.rm = True), max = max(feature, na.rm = True)) |>
mutate(out.of.range = allentown$feature > max | allentown$feature < min) |>
mutate(unusual = allentown$feature < LF | allentown$feature > UF) |>
mutate(description = case_when(out.of.range == True ~ "Out of Range",
unusual == True ~ "Outlying",
True ~ "Within Range"))
}
for (col in colnames(data1)){
if(class(data1$col) == "numeric"){
out1 = out(data1, col)
}
}
view(data1)
library(tidyverse)
out1 = out(data1, col)
out1 = out(data1, col)
out1 = out(data1, col)
out1 = out(data1, col)
out1 = out(data1, col)
install.packages("tidyverse")
library(tidyverse)
# Step 1
data1 = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
# help(group_by)
help(quantile)
help(summarize)
help(mutate)
view(data)
out = function(data, {{feature}}){
out1 = out(data1, col)
install.packages("tidyverse")
library(tidyverse)
# Step 1
data1 = read.csv("data/essentia.data.csv")
allentown = read.csv("data/essentia.data.allentown.csv")
# help(group_by)
help(quantile)
help(summarize)
help(mutate)
view(data)
out = function(data, {{feature}}){
out1 = out(data1, col)
out1 = out(data1, col)
out = function(data, feature){
data |>
group_by(artist) |>
summarize(min = min({{feature}}, na.rm = TRUE), LF = median({{feature}}, na.rm = TRUE) - 2*IQR({{feature}}, na.rm = TRUE), UF = median({{feature}}, na.rm = TRUE) + 2*IQR({{feature}}, na.rm = TRUE), max = max({{feature}}, na.rm = TRUE)) |>
mutate(out.of.range = allentown[[feature]] > max | allentown[[feature]] < min) |>
mutate(unusual = allentown[[feature]] < LF | allentown[[feature]] > UF) |>
mutate(description = case_when(out.of.range == TRUE ~ "Out of Range",
unusual == TRUE ~ "Outlying",
TRUE ~ "Within Range"))
}
for (col in colnames(data1)){
if(is.numeric(data1[[col]])){
out1 = out(data1, col)
}
}
